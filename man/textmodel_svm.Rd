% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/textmodel_seq.R, R/textmodel_svm.R
\name{textmodel_svm}
\alias{textmodel_svm}
\title{Neural Network with Two Layers}
\usage{
textmodel_svm(x, y, weight = c("uniform", "docfreq", "termfreq"), ...)

textmodel_svm(x, y, weight = c("uniform", "docfreq", "termfreq"), ...)
}
\arguments{
\item{x}{The data that will be used as training and test data.}

\item{y}{The outcome that will be used as outcomes to be predicted by the NN model.}

\item{weight}{weights for different classes for imbalanced training sets,
passed to \code{wi} in \code{\link[LiblineaR]{LiblineaR}}. \code{"uniform"}
uses default; \code{"docfreq"} weights by the number of training examples,
and \code{"termfreq"} by the relative sizes of the training classes in
terms of their total lengths in tokens.}

\item{...}{additional arguments passed to \code{\link[LiblineaR]{LiblineaR}}}

\item{Seed}{The seed used in the model. Defaults to 17}

\item{Weighting}{The type of feature weighting used in the document feature matrix. I.e., count and tfidf.}

\item{Epochs}{The number of epochs used in the NN model.}

\item{Units}{The number of network nodes used in the first layer of the sequential model}

\item{Batch}{The number of batches estimated}

\item{Dropout}{A floating variable bound between 0 and 1. It determines the rate at which units are dropped for the linear tranformation of the inputs.}

\item{ValSplit}{The validation split of the data used in the training of the LSTM model}

\item{Metric}{Metric used to train algorithm}

\item{Loss}{Metric used to train algorithm}

\item{Optimizer}{Optimizer used to fit model to training data}

\item{x}{the \link{dfm} on which the model will be fit.  Does not need to
contain only the training documents.}

\item{y}{vector of training labels associated with each document identified 
in \code{train}.  (These will be converted to factors if not already 
factors.)}
}
\description{
This function is a wrapper for a two layered neural network written using the Keras Package. It takes a

Fit a fast linear SVM classifier for texts, using the
\pkg{LiblineaR} package.
}
\examples{
# use party leaders for govt and opposition classes
docvars(data_corpus_irishbudget2010, "govtopp") <- 
    c(rep(NA, 4), "Govt", "Opp", NA, "Opp", NA, NA, NA, NA, NA, NA)
dfmat <- dfm(data_corpus_irishbudget2010)
tmod <- textmodel_svm(dfmat, y = docvars(dfmat, "govtopp"))
predict(tmod)
predict(tmod, type = "probability")

# multiclass problem - all party leaders
tmod2 <- textmodel_svm(dfmat, 
    y = c(rep(NA, 3), "SF", "FF", "FG", NA, "LAB", NA, NA, "Green", rep(NA, 3)))
predict(tmod2)
predict(tmod2, type = "probability")
}
\references{
R. E. Fan, K. W. Chang, C. J. Hsieh, X. R. Wang, and C. J. Lin. (2008)
LIBLINEAR: A Library for Large Linear Classification.
\emph{Journal of Machine Learning Research} 9: 1871-1874.
\url{http://www.csie.ntu.edu.tw/~cjlin/liblinear}.
}
\seealso{
\code{\link[LiblineaR]{LiblineaR}}
}
\keyword{networks}
\keyword{neural}
