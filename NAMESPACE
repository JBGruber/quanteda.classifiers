# Generated by roxygen2: do not edit by hand

S3method(coef,textmodel_svm)
S3method(coef,textmodel_svmlin)
S3method(coefficients,textmodel_svm)
S3method(coefficients,textmodel_svmlin)
S3method(load,textmodel_cnnlstmemb)
S3method(load,textmodel_nnseq)
S3method(predict,textmodel_cnnlstmemb)
S3method(predict,textmodel_nnseq)
S3method(predict,textmodel_svm)
S3method(predict,textmodel_svmlin)
S3method(print,predict.textmodel_cnnlstmemb)
S3method(print,predict.textmodel_nnseq)
S3method(print,predict.textmodel_svm)
S3method(print,predict.textmodel_svmlin)
S3method(print,textmodel_cnnlstmemb)
S3method(print,textmodel_nnseq)
S3method(print,textmodel_svm)
S3method(print,textmodel_svmlin)
S3method(print,tokens2sequences)
S3method(save,textmodel_cnnlstmemb)
S3method(save,textmodel_nnseq)
S3method(summary,textmodel_cnnlstmemb)
S3method(summary,textmodel_nnseq)
S3method(summary,textmodel_svm)
S3method(summary,textmodel_svmlin)
S3method(textmodel_cnnlstmemb,tokens)
S3method(textmodel_nnseq,dfm)
S3method(textmodel_svm,default)
S3method(textmodel_svm,dfm)
S3method(textmodel_svmlin,default)
S3method(textmodel_svmlin,dfm)
S3method(tokens2sequences,tokens)
S3method(tokens2sequences_conform,tokens2sequences)
export(is.tokens2sequences)
export(textmodel_cnnlstmemb)
export(textmodel_nnseq)
export(textmodel_svm)
export(textmodel_svmlin)
export(tokens2sequences)
export(tokens2sequences_conform)
import(quanteda)
importFrom(LiblineaR,LiblineaR)
importFrom(RSSL,svmlin)
importFrom(SparseM,as.matrix.csr)
importFrom(keras,compile)
importFrom(keras,fit)
importFrom(keras,keras_model_sequential)
importFrom(keras,layer_activation)
importFrom(keras,layer_conv_1d)
importFrom(keras,layer_dense)
importFrom(keras,layer_dropout)
importFrom(keras,layer_embedding)
importFrom(keras,layer_lstm)
importFrom(keras,layer_max_pooling_1d)
importFrom(keras,predict_classes)
importFrom(keras,predict_proba)
importFrom(keras,serialize_model)
importFrom(keras,to_categorical)
importFrom(keras,unserialize_model)
importFrom(methods,as)
importFrom(methods,new)
importFrom(stats,coef)
importFrom(stats,coefficients)
importFrom(stats,na.omit)
importFrom(stats,predict)
importFrom(utils,head)
